#include <stdio.h>
#include <pthread.h>
#include <unistd.h>

pthread_mutex_t lock;
int sharedVariable = 0;

void *increment(void *arg) {
    pthread_mutex_lock(&lock);
    printf("Thread %ld entering critical section.\n", pthread_self());
    sharedVariable++;
    printf("Shared Variable: %d\n", sharedVariable);
    printf("Thread %ld exiting critical section.\n", pthread_self());
    pthread_mutex_unlock(&lock);
    return NULL;
}

int main() {
    pthread_t t1, t2;

    pthread_mutex_init(&lock, NULL);

    pthread_create(&t1, NULL, increment, NULL);
    pthread_create(&t2, NULL, increment, NULL);

    pthread_join(t1, NULL);
    pthread_join(t2, NULL);

    pthread_mutex_destroy(&lock);

    return 0;
}
